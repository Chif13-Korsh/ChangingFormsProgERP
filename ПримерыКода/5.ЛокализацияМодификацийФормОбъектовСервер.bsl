// Примеры реализации программного изменения формы

#Область ПрограммныйИнтерфейс

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы
// для программного изменения формы документа
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
// 	Отказ - Булево - признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события
//
Процедура ПриСозданииНаСервереФормаДокумента(Форма, Отказ, СтандартнаяОбработка) Экспорт 	
	
	МодификацияФормДокументовОбщая(Форма, Отказ, СтандартнаяОбработка);

	Если Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента" Тогда 
		ПриСозданииНаСервере_РеализацияТоваровУслуг_ФормаДокумента(Форма, Отказ, СтандартнаяОбработка);
				
	ИначеЕсли Форма.ИмяФормы = "Документ.ВнутреннееПотребление.Форма.ФормаДокумента" Тогда 
		ПриСозданииНаСервере_ВнутреннееПотреблениеТоваров_ФормаДокумента(Форма, Отказ, СтандартнаяОбработка);

	КонецЕсли;
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы
// для программного изменения формы Элемента
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
// 	Отказ - Булево - признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события
//
Процедура ПриСозданииНаСервереФормаЭлемента(Форма, Отказ, СтандартнаяОбработка) Экспорт

	Если Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда 
		ПриСозданииНаСервере_Номенклатура_ФормаЭлемента(Форма, Отказ, СтандартнаяОбработка); 
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда  
		ПриСозданииНаСервере_Контрагенты_ФормаЭлемента(Форма, Отказ, СтандартнаяОбработка);

	КонецЕсли;
		
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы
// для программного изменения формы выбора
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
// 	Отказ - Булево - признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события
//
Процедура ПриСозданииНаСервереФормаВыбора(Форма, Отказ, СтандартнаяОбработка) Экспорт 
	
	Если Форма.ИмяФормы = "Справочник.Подразделения.Форма.ФормаВыбораУправляемая" Тогда
		ПриСозданииНаСервере_Подразделения_ФормаВыбора(Форма, Отказ, СтандартнаяОбработка);	
	
	ИначеЕсли Форма.ИмяФормы = "Справочник.ДоговорыКонтрагентов.Форма.ФормаВыбора" Тогда
		ПриСозданииНаСервере_ДоговорыКонтрагентов_ФормаВыбора(Форма, Отказ, СтандартнаяОбработка);	
	
	КонецЕсли;
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы
// для программного изменения произвольной формы
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
// 	Отказ - Булево - признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события
//
Процедура ПриСозданииНаСервереПроизвольныеФормы(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Если Форма.ИмяФормы = "Справочник.Номенклатура.Форма.РазблокированиеРеквизитов" Тогда 
		ПриСозданииНаСервере_Номенклатура_РазблокированиеРеквизитов(Форма, Отказ, СтандартнаяОбработка);
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.КлиентБанк.Форма.ВыгрузкаВБанк" Тогда
		ПриСозданииНаСервере_КлиентБанк_ВыгрузкаВБанк(Форма, Отказ, СтандартнаяОбработка);
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.КлиентБанк.Форма.ЗагрузкаВыписки" Тогда
		ПриСозданииНаСервере_КлиентБанк_ЗагрузкаВыписки(Форма, Отказ, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПриСозданииНаСервере_ФормаДокумента

Процедура МодификацияФормДокументовОбщая(Форма, Отказ, СтандартнаяОбработка)
	
	КопированиеПрисоединенныхФайлов_ПодготовитьФорму(Форма);
	
КонецПроцедуры

Процедура ПриСозданииНаСервере_РеализацияТоваровУслуг_ФормаДокумента(Форма, Отказ, СтандартнаяОбработка)
	
	Элементы = Форма.Элементы;
	Команды = Форма.Команды;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(
		Новый РеквизитФормы("ВалютаPO", Новый ОписаниеТипов("СправочникСсылка.Валюты"), , "Валюта РО")
	);
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Команда = Команды.Добавить("УстановитьПризнакФиксированныйКурс");
	Команда.Действие = "УстановитьПризнакФиксированногоКурсаВалюты";
	
	КнФиксКурс = ЛокализацияМодификацийФормОбъектов.ДобавитьКнопкуФормы(Форма, 
		"УстановитьПризнакФиксКурса", 
		"УстановитьПризнакФиксированныйКурс", 
		НСтр("ru = 'Установить признак фиксированного курса'"),
		Элементы.ФормаКоманднаяПанель, 
		ВидКнопкиФормы.КнопкаКоманднойПанели
	);
	КнФиксКурс.Картинка = БиблиотекаКартинок.Валюты;
	КнФиксКурс.Отображение = ОтображениеКнопки.КартинкаИТекст;	
	Форма.Элементы.Переместить(КнФиксКурс, Элементы.ФормаКоманднаяПанель, Элементы.ФормаГруппаСоздатьНаОсновании);
		
	ГруппаВалютаPO = ЛокализацияМодификацийФормОбъектов.ДобавитьГруппуФормы(Форма, 
		"ГруппаВалютаPO", 
		НСтр("ru = 'Оригинальная валюта PO'"), 
		Элементы.ГруппаПлатежЛево
	);
	ГруппаВалютаPO.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
	
	ЛокализацияМодификацийФормОбъектов.ДобавитьПолеФормы(Форма, "ВалютаДоговора", 
		"ВалютаPO", НСтр("ru = 'Валюта PO'"), ГруппаВалютаPO);
	
	ЛокализацияМодификацийФормОбъектов.ДобавитьПолеФлагаФормы(Форма, "ВнешнийКурс", 
		"Объект.ВнешнийКурс", НСтр("ru = 'Внешний курс'"), ГруппаВалютаPO);
	
КонецПроцедуры

#КонецОбласти

#Область ПриСозданииНаСервере_ФормаЭлемента
#КонецОбласти

#Область ПриСозданииНаСервере_ФормаВыбора
#КонецОбласти

#Область ПриСозданииНаСервере_ПроизвольныеФормы
#КонецОбласти