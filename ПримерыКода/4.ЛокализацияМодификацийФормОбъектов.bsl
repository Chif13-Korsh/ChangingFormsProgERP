// BSLLS-off
#Область ПрограммныйИнтерфейс

// Процедура перенаправляет в процедуры изменения форм программно
//
// Параметры:
//  Форма  - <ФормаКлиентскогоПриложения> - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ  - <Булево> - признак отказа от создания формы.
//  СтандартнаяОбработка  - <Булево> - признак выполнения стандартной (системной) обработки события.
//
Процедура ПриСозданииНаСервереИзменениеФорм(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Если СтрНайти(Форма.ИмяФормы, "ФормаЭлемента") > 0 Тогда 
		ЛокализацияМодификацийФормОбъектовСервер.ПриСозданииНаСервереФормаЭлемента(Форма, Отказ, СтандартнаяОбработка);	
		
	ИначеЕсли СтрНайти(Форма.ИмяФормы, "ФормаДокумента") > 0 Тогда 
		ЛокализацияМодификацийФормОбъектовСервер.ПриСозданииНаСервереФормаДокумента(Форма, Отказ, СтандартнаяОбработка);	
		
	ИначеЕсли СтрНайти(Форма.ИмяФормы, "ФормаСписка") > 0 Тогда 
		ЛокализацияМодификацийФормОбъектовСервер.ПриСозданииНаСервереФормаСписка(Форма, Отказ, СтандартнаяОбработка);	
		
	ИначеЕсли СтрНайти(Форма.ИмяФормы, "ФормаВыбора") > 0 Тогда 
		ЛокализацияМодификацийФормОбъектовСервер.ПриСозданииНаСервереФормаВыбора(Форма, Отказ, СтандартнаяОбработка);	
		
	Иначе
		ЛокализацияМодификацийФормОбъектовСервер.ПриСозданииНаСервереПроизвольныеФормы(Форма, Отказ, СтандартнаяОбработка);	
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Добавляет поле реквизита на форму согласно переданным параметрам
//
// Параметры:
//  Форма - <ФормаКлиентскогоПриложения> - форма, из обработчика события которой происходит вызов процедуры.
//  ИмяПоля - <Строка> - имя поля формы.
//  ПутьКДанным - <Строка> - путь к данным реквизита поля.
//  Родитель - <ЭлементФормы> - элемент формы, которому будет подчинено создаваемое поле реквизита,
//                              по умолчанию, сама форма.
//  Ширина - <Число> - ширина поля на форме, по умолчанию автоширина.
//  Гиперссылка - <Булево> - поле будет показано в виде ссылки, по умолчанию обычное поле.
//  ТолькоПросмотр - <Булево> - признак для поля ТолькоПросмотр, по умолчанию открыто на редактирование.
//  РастягиватьПоГоризонтали - <Булево> - признак поля РастягиватьПоГоризонтали, если не указано, то авторежим;
//                                       не работает, если указагна ширина поля.
//  СобытияПоля - <Структура> - содержит события поля: ключом является имя события, значение - действие события.
//
//  Возвращаемое значение: ПолеФормы
//
Функция ДобавитьПолеФормы(Форма, ИмяПоля, ПутьКДанным, Заголовок,    
			Родитель = Неопределено, Ширина = 0, Гиперссылка = Ложь, ТолькоПросмотр = Ложь, 
			РастягиватьПоГоризонтали = Неопределено, СобытияПоля = Неопределено) Экспорт
	
	Попытка
		НовыйЭлемент = Форма.Элементы.Добавить(ИмяПоля, Тип("ПолеФормы"), Родитель);
		Если Гиперссылка = Истина Тогда
			НовыйЭлемент.Вид         = ВидПоляФормы.ПолеНадписи;
			НовыйЭлемент.Гиперссылка = Истина;
		Иначе
			НовыйЭлемент.Вид 	 	 = ВидПоляФормы.ПолеВвода;
		КонецЕсли;
		НовыйЭлемент.ПутьКДанным = ПутьКДанным;
		НовыйЭлемент.Заголовок   = Заголовок;

		НовыйЭлемент.ТолькоПросмотр = ТолькоПросмотр;
		НовыйЭлемент.КнопкаОчистки  = НЕ ТолькоПросмотр;
		
		Если Ширина <> 0 Тогда
			НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
			НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;			
			НовыйЭлемент.Ширина = Ширина;
		Иначе
			НовыйЭлемент.АвтоМаксимальнаяШирина = Истина; 
			Если РастягиватьПоГоризонтали <> Неопределено Тогда
				НовыйЭлемент.РастягиватьПоГоризонтали = РастягиватьПоГоризонтали;	
			КонецЕсли;
		КонецЕсли;
		
		Если СобытияПоля <> Неопределено Тогда
			Для каждого Событие Из СобытияПоля Цикл
				НовыйЭлемент.УстановитьДействие(Событие.Ключ, Событие.Значение);
			КонецЦикла;
		КонецЕсли;
		
		Возврат НовыйЭлемент;
		
	Исключение
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка программного добавления реквизита %1 с именем %2 на форму %3: %4",
			ПутьКДанным, ИмяПоля, Форма.ИмяФормы, Символы.ПС + ИнформацияОбОшибке().Описание
		);
		ЗаписьЖурналаРегистрации("Ошибка выполнения", УровеньЖурналаРегистрации.Ошибка, , 
			НСтр("ru = 'Программное добавление реквизита на форму'"), ТекстСообщения
		);
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

// Добавляет поле флага на форму согласно переданным параметрам
//
// Параметры:
//  Форма - <ФормаКлиентскогоПриложения> - форма, из обработчика события которой происходит вызов процедуры.
//  ИмяПоля - <Строка> - имя поля формы.
//  ПутьКДанным - <Строка> - путь к данным реквизита поля.
//  Родитель - <ЭлементФормы> - элемент формы, которому будет подчинено создаваемое поле реквизита,
//                              по умолчанию, сама форма.
//  ТолькоПросмотр - <Булево> - признак для поля ТолькоПросмотр, по умолчанию открыто на редактирование.
//  Положение - <ПоложениеЗаголовкаЭлементаФормы> - определяет положение заголовка флага,
//                                       по умолчанию, заголовок расположен справа.
//  ДействиеСобытия - <Строка> - наименование действия события флага ПриИзменении.
//
//  Возвращаемое значение: ПолеФормы
//
Функция ДобавитьПолеФлагаФормы(Форма, ИмяПоля, ПутьКДанным, Заголовок, 
			Родитель = Неопределено, ТолькоПросмотр = Ложь, 
			Положение = Неопределено, ДействиеСобытия = "") Экспорт
				
	Если Положение = Неопределено Тогда
		Положение = ПоложениеЗаголовкаЭлементаФормы.Право;	
	КонецЕсли;
	
	Попытка
		НовыйЭлемент = Форма.Элементы.Добавить(ИмяПоля, Тип("ПолеФормы"), Родитель);
		НовыйЭлемент.Вид         = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ПутьКДанным = ПутьКДанным;
		НовыйЭлемент.Заголовок   = Заголовок;
		
		НовыйЭлемент.ПоложениеЗаголовка = Положение;
		НовыйЭлемент.ТолькоПросмотр 	= ТолькоПросмотр;
		
		Если Не ДействиеСобытия = "" Тогда
			НовыйЭлемент.УстановитьДействие("ПриИзменении", ДействиеСобытия);
		КонецЕсли;
		
		Возврат НовыйЭлемент;
		
	Исключение
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка программного добавления реквизита %1 с именем %2 на форму %3: %4",
			ПутьКДанным, ИмяПоля, Форма.ИмяФормы, Символы.ПС + ИнформацияОбОшибке().Описание
		);
		ЗаписьЖурналаРегистрации("Ошибка выполнения", УровеньЖурналаРегистрации.Ошибка, , 
			НСтр("ru = 'Программное добавление реквизита на форму'"), ТекстСообщения
		);
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

// Добавляет кнопку команды формы согласно переданным параметрам
//
// Параметры:
//  Форма - <ФормаКлиентскогоПриложения> - форма, из обработчика события которой происходит вызов процедуры.
//  Имя - <Строка> - имя команды формы.
//  Родитель - <ЭлементФормы> - элемент формы, которому будет подчинено создаваемое поле реквизита,
//                              по умолчанию, сама форма.
//  ИмяКоманды - <Строка> - имя .
//  Положение - <ПоложениеЗаголовкаЭлементаФормы> - определяет положение заголовка флага,
//                                       по умолчанию, заголовок расположен справа.
//  ДействиеСобытия - <Строка> - наименование действия события флага ПриИзменении.
//
//  Возвращаемое значение: ПолеФормы
//
Функция ДобавитьКнопкуФормы(Форма, Имя, Родитель = Неопределено, ИмяКоманды = "", Заголовок = "", 
	Вид = Неопределено, ПередЭлементом = Неопределено) Экспорт

НайденныйЭлемент = Форма.Элементы.Найти(Имя);
Если НайденныйЭлемент <> Неопределено Тогда
	Возврат НайденныйЭлемент;
КонецЕсли;

Попытка
	Если ПередЭлементом <> Неопределено Тогда
		Элемент = Форма.Элементы.Вставить(Имя, Тип("КнопкаФормы"), Родитель, ПередЭлементом);
	Иначе
		Элемент = Форма.Элементы.Добавить(Имя, Тип("КнопкаФормы"), Родитель);
	КонецЕсли;
	
	Элемент.ИмяКоманды = ИмяКоманды;
	
	Если ЗначениеЗаполнено(Вид) Тогда
		Элемент.Вид = Вид;
	Иначе
		Элемент.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Заголовок) Тогда
		Элемент.Заголовок = Заголовок;
	КонецЕсли;
	
	Возврат Элемент;
	
Исключение
	ОписаниеОшибки = ИнформацияОбОшибке().Описание;
	ЗаписьЖурналаРегистрации("Ошибка выполнения", УровеньЖурналаРегистрации.Ошибка, , 
		НСтр("ru = 'Программное добавление реквизита на форму'"),
		"Ошибка программного добавления реквизита кнопки с именем " + Имя 
			+ " на форму " + Форма.ИмяФормы + ":" + Символы.ПС + ОписаниеОшибки
	);
	Возврат Неопределено;
КонецПопытки;

КонецФункции


Функция ДобавитьГруппуФормы(Форма, Имя, Родитель = Неопределено, Заголовок = "", 
	Вид = Неопределено, Группировка = Неопределено, ПередЭлементом = Неопределено) Экспорт

НайденныйЭлемент = Форма.Элементы.Найти(Имя);
Если НайденныйЭлемент <> Неопределено Тогда
	Возврат НайденныйЭлемент;
КонецЕсли;

Попытка
	Если ПередЭлементом <> Неопределено Тогда
		Элемент = Форма.Элементы.Вставить(Имя, Тип("ГруппаФормы"), Родитель, ПередЭлементом);
	Иначе
		Элемент = Форма.Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Вид) Тогда
		Элемент.Вид = Вид;
	Иначе
		Элемент.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	КонецЕсли;
	
	Если ПустаяСтрока(Заголовок) Тогда
		Элемент.ОтображатьЗаголовок = Ложь;
	Иначе
		Элемент.Заголовок = Заголовок;
	КонецЕсли;
	
	Если Элемент.Вид <> ВидГруппыФормы.ОбычнаяГруппа Тогда
		Возврат Элемент;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Группировка) Тогда
		Элемент.Группировка = Группировка;
	Иначе
		Элемент.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	КонецЕсли;
	
	Возврат Элемент;
	
Исключение
	ОписаниеОшибки = ИнформацияОбОшибке().Описание;
	ЗаписьЖурналаРегистрации("Ошибка выполнения", УровеньЖурналаРегистрации.Ошибка, , 
		НСтр("ru = 'Программное добавление реквизита на форму'"),
		"Ошибка программного добавления реквизита группы с именем " + Имя 
			+ " на форму " + Форма.ИмяФормы + ":" + Символы.ПС + ОписаниеОшибки
	);
	Возврат Неопределено;
КонецПопытки;

КонецФункции

Функция ДобавитьСтраницуФормы(Форма, Имя, Родитель = Неопределено, Заголовок = "") Экспорт

Элемент = Форма.Элементы.Добавить("Страница" + Имя, Тип("ГруппаФормы"), Родитель);
Элемент.Вид = ВидГруппыФормы.Страница;
Элемент.Заголовок = Имя;

Если ПустаяСтрока(Заголовок) Тогда
	Элемент.Заголовок = Имя;
Иначе
	Элемент.Заголовок = Заголовок;
КонецЕсли;

Возврат Элемент;

КонецФункции


#КонецОбласти 
